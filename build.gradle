plugins {
    id 'groovy'
    id 'java'
    id 'org.springframework.boot' version '2.4.3'
    id('io.spring.dependency-management') version('1.0.11.RELEASE')
}

group 'org.example'
version '1.0-SNAPSHOT'
// compiler 버전 설정을 위해 sourceCompatibility를 사용한다. 이 속성은 =로 값을 할당해야한다.
sourceCompatibility = "1.8"

repositories {
    mavenCentral()
}

dependencies {
    // spring boot 관련된 library들은 io.spring.dependency-management에 의해 자동으로 버전 관리가 이뤄진다.
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.projectlombok:lombok'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // mariadb
    implementation 'org.mariadb.jdbc:mariadb-java-client'
    // mustache 사용을 위해 추가한다.
    implementation 'org.springframework.boot:spring-boot-starter-mustache'

    // 단위 테스트를 위해 추가한다.
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // spock 단위 테스트를 사용하기 위해 추가한다.
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
    testImplementation 'org.spockframework:spock-spring:1.3-groovy-2.5'
    // spock에서 클래스 기반의 Mock을 생성하기 위해 추가한다.
    testImplementation 'net.bytebuddy:byte-buddy:1.10.20'

    implementation 'org.codehaus.groovy:groovy-all:3.0.5'

    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testAnnotationProcessor 'org.projectlombok:lombok'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

}

test {
    useJUnitPlatform()
}